{"openapi":"3.0.1","info":{"title":"T1 Open School Spring Security and JWT Application","description":"Sample API of Spring Security and JWT Application","contact":{"name":"Karabanov Andrey","email":"deskpa@yandex.ru"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8080","description":"Default Server URL"}],"tags":[{"name":"Admin API","description":"API for administrators"},{"name":"Authorization and Registration","description":"User authorization and registration"},{"name":"Client API","description":"API for client"}],"paths":{"/api/auth/register":{"post":{"tags":["Authorization and Registration"],"summary":"User registration","description":"Registers a new user with provided details and generates JWT token","operationId":"register","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignUpRequest"}}},"required":true},"responses":{"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}}}},"/api/auth/register/admin":{"post":{"tags":["Authorization and Registration"],"summary":"Admin registration","description":"Registers a new administrator with provided details and admin key, and generates JWT token","operationId":"registerAdmin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignUpAdminRequest"}}},"required":true},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}}}},"/api/auth/refresh":{"post":{"tags":["Authorization and Registration"],"summary":"Refresh token","description":"Refreshes JWT token based on provided refresh token","operationId":"refresh","requestBody":{"content":{"application/json":{"schema":{"type":"string","description":"Refresh token used to generate a new JWT token"}}},"required":true},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}}}},"/api/auth/login":{"post":{"tags":["Authorization and Registration"],"summary":"User login","description":"Authenticates user based on provided credentials and generates JWT token","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignInRequest"}}},"required":true},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}}}},"/api/users/{id}":{"get":{"tags":["Admin API"],"summary":"Get user by ID","description":"Retrieves user information by their ID","operationId":"getUserById","parameters":[{"name":"id","in":"path","description":"ID of the user to retrieve","required":true,"schema":{"minimum":0,"type":"integer","format":"int64"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetUserResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}},"security":[{"JWT":[]}]}},"/api/users/me":{"get":{"tags":["Client API"],"summary":"Get current user","description":"Retrieves information about the current user based on the email stored in the JWT payload","operationId":"getCurrentUser","responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetUserResponse"}}}},"400":{"description":"Invalid input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}},"security":[{"JWT":[]}]}}},"components":{"schemas":{"SignUpRequest":{"required":["email","name","password"],"type":"object","properties":{"email":{"type":"string","example":"test@gmail.com"},"password":{"type":"string"},"name":{"type":"string"}}},"ErrorMessage":{"type":"object","properties":{"statusCode":{"type":"integer","format":"int32","example":404},"timestamp":{"type":"string","format":"date-time","example":"2024-04-11T12:00:00Z"},"description":{"type":"string","example":"Resource not found"},"message":{"type":"string","example":"The requested resource could not be found"}},"description":"Error message model"},"JwtResponse":{"required":["accessToken","id","name","refreshToken","username"],"type":"object","properties":{"id":{"type":"integer","description":"User ID","format":"int64"},"name":{"type":"string","description":"User name"},"username":{"type":"string","description":"Username"},"accessToken":{"type":"string","description":"Access token"},"refreshToken":{"type":"string","description":"Refresh token"}},"description":"JWT Response"},"SignUpAdminRequest":{"required":["adminKey","email","name","password"],"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"},"name":{"type":"string"},"adminKey":{"type":"string"}}},"SignInRequest":{"required":["email","password"],"type":"object","properties":{"email":{"type":"string","example":"superman@gmail.com"},"password":{"type":"string","example":"super1234"}}},"GetUserResponse":{"required":["email","id","name"],"type":"object","properties":{"id":{"type":"integer","description":"User ID","format":"int64"},"email":{"type":"string","description":"User email"},"name":{"type":"string","description":"User name"}},"description":"Response for getting user details","readOnly":true}},"securitySchemes":{"JWT":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}